
#include <bits/stdc++.h>
using namespace std;

int main()
{
    int n,m;
    cin>>n>>m;
    vector <string> A(n);
   
    for(int i=0; i<n; i++)
    {  
       for(int j=0; j<m; j++)
       cin>>A[i][j];
    }
    
    int ans=0;
    for(int i=0; i<n; i++)
    {
        for(int j=0; j<m; j++)
     {  int s=0;
        if(A[i][j]=='R')
        {
           set <pair <int, int> > saved;
           while((i-s>=0)&&(j-s>=0)&&(i+s<n)&&(j+s<m)&&(A[i-s][j]=='R')&&(A[i+s][j]=='R')&&(A[i][j+s]=='R')&&(A[i][j-s]=='R'))
           {  
               saved.insert(make_pair(i-s, j));
               saved.insert(make_pair(i+s, j));
               saved.insert(make_pair(i, j-s));
               saved.insert(make_pair(i, j+s));
                s++;
                
                int i1, j1;
              
                for(i1=i; i1<n; i1++)
                {   if(i1==i) j1=j;
                    else j1=0; 
                    for(; j1<m; j1++)
                    { 
                      
                        if(A[i1][j1]=='R')
                        { 
                            int s1=0;
                            while((i1-s1>=0)&&(j1-s1>=0)&&(i1+s1<n)&&(j1+s1<m)&&(A[i1-s1][j1]=='R')&&(A[i1+s1][j1]=='R')&&(A[i1][j1+s1]=='R')&&(A[i1][j1-s1]=='R'))
                            {
                                int q1=(saved.find(make_pair(i1-s1,j1))==saved.end());
                                int q2=(saved.find(make_pair(i1,j1-s1))==saved.end());
                                int q3=(saved.find(make_pair(i1+s1,j1))==saved.end());
                                int q4=(saved.find(make_pair(i1,j1+s1))==saved.end());
                                if(q1&&q2&&q3&&q4)
                                s1++;
                                else 
                                break;
                            }
                           
                            int temp=(      (   (s1-1)*4+1   )*(   (s-1)*4+1   )     );
                            ans=max(ans, temp);  
                        } 
                    }  
                }
           }
       }
    }

    }
    cout<<ans;
    return 0; 
}
 
